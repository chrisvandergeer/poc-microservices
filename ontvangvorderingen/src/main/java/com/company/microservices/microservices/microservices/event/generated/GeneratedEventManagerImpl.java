package com.company.microservices.microservices.microservices.event.generated;

import com.company.microservices.microservices.microservices.event.Event;
import com.company.microservices.microservices.microservices.event.EventManager;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.config.identifier.TableIdentifier;
import com.speedment.runtime.core.manager.AbstractManager;
import com.speedment.runtime.field.Field;
import java.util.stream.Stream;

/**
 * The generated base implementation for the manager of every {@link
 * com.company.microservices.microservices.microservices.event.Event} entity.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedEventManagerImpl 
extends AbstractManager<Event> 
implements GeneratedEventManager {
    
    private final TableIdentifier<Event> tableIdentifier;
    
    protected GeneratedEventManagerImpl() {
        this.tableIdentifier = TableIdentifier.of("microservices", "microservices", "event");
    }
    
    @Override
    public TableIdentifier<Event> getTableIdentifier() {
        return tableIdentifier;
    }
    
    @Override
    public Stream<Field<Event>> fields() {
        return EventManager.FIELDS.stream();
    }
    
    @Override
    public Stream<Field<Event>> primaryKeyFields() {
        return Stream.of(
            Event.ID
        );
    }
}