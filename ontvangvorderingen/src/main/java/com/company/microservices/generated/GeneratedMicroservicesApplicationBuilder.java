package com.company.microservices.generated;

import com.company.microservices.MicroservicesApplication;
import com.company.microservices.MicroservicesApplicationBuilder;
import com.company.microservices.MicroservicesApplicationImpl;
import com.company.microservices.microservices.microservices.event.EventManagerImpl;
import com.company.microservices.microservices.microservices.event.EventSqlAdapter;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.common.injector.Injector;
import com.speedment.runtime.core.internal.AbstractApplicationBuilder;

/**
 * A generated base {@link
 * com.speedment.runtime.core.internal.AbstractApplicationBuilder} class for the
 * {@link com.speedment.runtime.config.Project} named microservices.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMicroservicesApplicationBuilder extends AbstractApplicationBuilder<MicroservicesApplication, MicroservicesApplicationBuilder> {
    
    protected GeneratedMicroservicesApplicationBuilder() {
        super(MicroservicesApplicationImpl.class, GeneratedMicroservicesMetadata.class);
        withManager(EventManagerImpl.class);
        withComponent(EventSqlAdapter.class);
    }
    
    @Override
    public MicroservicesApplication build(Injector injector) {
        return injector.getOrThrow(MicroservicesApplication.class);
    }
}